Думаю, що абстрактна фабрика підйде найкраще, тому використовую її.

З комбінації інтерфейсів IProduct, IPhysicalProduct, IExpirableProduct, IMeatSort,
IDigitalProduct, IVideoProduct(можливо кращою назвою буде IDurable)
можна буде створити будь-який продукт.
IProduct є обов'язковим інтерфейсом для кожного продукту.

З тих комбінацій зробив інтерфейси IFoodProduct, IMilkProduct, IMeatProduct,
IVirtualProduct, IFilmProduct, щоб додати конкретики, а далі зробив класи Food, Cheese,
Meat, Game, Film, як відповідно наслідують інрефейси.
Нижче фабрики для створення конкретних продуктів.

Storage містить поле products, що є словником IProduct'ів і int'ів(кількості продуктів).
Містить найбільш потріні йому властивості і методи, як от Count, AddProduct чи RemoveProduct.
Не думаю що використовувати "Одинак" для цього класу є доброю ідеєю - треба створювати клас Buy,
який являє собой той самий Storage з тиким самим заданням - зберігання продуктів.

AdminRoot i CustomerRoot, які є статичними, використовують Storage і спілкуються з користувачем.
// Діаграма містить помилки і не відображає Ваш текст.Усно уточню.
